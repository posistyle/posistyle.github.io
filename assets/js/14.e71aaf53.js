(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{210:function(t,a,e){"use strict";e.r(a);var s=e(28),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"配置用户信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置用户信息"}},[t._v("#")]),t._v(" 配置用户信息")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('git config --global user.name "John Doe"\ngit config --global user.email johndoe@example.com\n')])])]),e("ul",[e("li",[t._v("注意")])]),t._v(" "),e("blockquote",[e("p",[t._v("如果使用了 --global 选项，那么该命令只需要运行一次")])]),t._v(" "),e("blockquote",[e("p",[t._v("当你想针对特定项目使用不同的用户名称与邮件地址时，可以在那个项目目录下运行没有 --global 选项的命令来配置")])]),t._v(" "),e("h4",{attrs:{id:"检查配置信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检查配置信息"}},[t._v("#")]),t._v(" 检查配置信息")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git config --list\n")])])]),e("h2",{attrs:{id:"基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),e("h3",{attrs:{id:"_1-克隆现有的仓库-git-clone-url"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-克隆现有的仓库-git-clone-url"}},[t._v("#")]),t._v(" 1.克隆现有的仓库 --- git clone [url]")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1. git clone https://github.com/libgit2/libgit2\n\n2. git clone https://github.com/libgit2/libgit2 mylibgit (自定义本地仓库的名字为mylibgit) \n")])])]),e("h3",{attrs:{id:"_2-检查当前文件状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-检查当前文件状态"}},[t._v("#")]),t._v(" 2.检查当前文件状态")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git status 或者显示简写 git status -s\n")])])]),e("ul",[e("li",[t._v("状态返回信息")])]),t._v(" "),e("blockquote",[e("p",[t._v("1.没有任何改动")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("On branch master\nnothing to commit, working directory clean\n")])])]),e("blockquote",[e("p",[t._v("2.创建新文件（文件未被跟踪 ）")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('On branch master\nUntracked files:\n  (use "git add <file>..." to include in what will be committed)\n\n    README\n\nnothing added to commit but untracked files present (use "git add" to track)\n')])])]),e("blockquote",[e("p",[t._v("3.文件处于暂存状态（运行git add之后的状态）")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('On branch master\nChanges to be committed:\n  (use "git reset HEAD <file>..." to unstage)\n\n    new file:   README\n')])])]),e("blockquote",[e("p",[t._v("4.修改已暂存的文件")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('On branch master\nChanges not staged for commit:\n  (use "git add <file>..." to update what will be committed)\n  (use "git checkout -- <file>..." to discard changes in working directory)\n\n    modified:   CONTRIBUTING.md\n')])])]),e("h3",{attrs:{id:"_3-暂存已修改文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-暂存已修改文件"}},[t._v("#")]),t._v(" 3.暂存已修改文件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git add CONTRIBUTING.md\n")])])]),e("h3",{attrs:{id:"_4-提交更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-提交更新"}},[t._v("#")]),t._v(" 4.提交更新")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git commit -m '提交信息'\n\n跳过使用暂存区域（Git 就会自动把所有已经跟踪过的文件暂存起来一并提交）\n\ngit commit -a -m 'added new benchmarks'\n")])])]),e("h3",{attrs:{id:"_5-移除文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-移除文件"}},[t._v("#")]),t._v(" 5.移除文件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git rm PROJECTS.md\n\ngit rm -f PROJECTS.md (强制删除)\n\ngit rm --cached README (从 Git 仓库中删除，但保留在当前工作目录中)\n")])])]),e("h3",{attrs:{id:"_6-查看提交历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-查看提交历史"}},[t._v("#")]),t._v(" 6.查看提交历史")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('git log\n\ngit log -p -2 (最近两次提交的内容差异)\n\ngit log --stat (每次提交的简略的统计信息)\n\ngit log --pretty=oneline (使用不同于默认格式的方式展示提交历史)\n\ngit log --pretty=format:"%h - %an, %ar : %s" (定制要显示的记录格式)\n\n')])])]),e("h3",{attrs:{id:"_7-撤消操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-撤消操作"}},[t._v("#")]),t._v(" 7. 撤消操作")]),t._v(" "),e("h4",{attrs:{id:"取消暂存的文件-运行git-add之后"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#取消暂存的文件-运行git-add之后"}},[t._v("#")]),t._v(" 取消暂存的文件(运行git add之后)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git reset HEAD CONTRIBUTING.md\n")])])]),e("h4",{attrs:{id:"撤消对文件的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤消对文件的修改"}},[t._v("#")]),t._v(" 撤消对文件的修改")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git checkout -- CONTRIBUTING.md\n\n")])])]),e("h4",{attrs:{id:"撤销某次提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤销某次提交"}},[t._v("#")]),t._v(" 撤销某次提交")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git log //查看提交记录\n\n1.回滚*到*某个提交记录\ngit reset --hard 75d7a025771f1451318be259feaf749c0c28dd98 //指向该提交记录\ngit push -f\n\n2.回滚某个提交记录\ngit revert -n 75d7a025771f1451318be259feaf749c0c28dd98 //用于“反做”某一个版本，以达到撤销该版本的修改的目的\ngit revert --continue\ngit push\n\n")])])]),e("h3",{attrs:{id:"_8-git-别名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-git-别名"}},[t._v("#")]),t._v(" 8.Git 别名")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git config --global alias.co checkout\n")])])]),e("h2",{attrs:{id:"远程仓库的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库的使用"}},[t._v("#")]),t._v(" 远程仓库的使用")]),t._v(" "),e("h3",{attrs:{id:"_1-查看远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-查看远程仓库"}},[t._v("#")]),t._v(" 1. 查看远程仓库")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git remote (列出远程服务器的简写)\n\ngit remote -v (显示需要读写远程仓库使用的 Git 保存的简写与其对应的 URL)\n")])])]),e("h3",{attrs:{id:"_2-从远程仓库中抓取与拉取"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-从远程仓库中抓取与拉取"}},[t._v("#")]),t._v(" 2. 从远程仓库中抓取与拉取")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git fetch [remote-name] (不会自动合并或修改你当前的工作)\n\ngit pull (自动尝试合并到当前所在的分支。)\n")])])]),e("h3",{attrs:{id:"_3-推送到远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-推送到远程仓库"}},[t._v("#")]),t._v(" 3. 推送到远程仓库")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git push [remote-name] [branch-name] (之前有推送，必须拉取合并之后才能推送)\n\n")])])]),e("h2",{attrs:{id:"打标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打标签"}},[t._v("#")]),t._v(" 打标签")]),t._v(" "),e("h3",{attrs:{id:"_1-列出标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-列出标签"}},[t._v("#")]),t._v(" 1.列出标签")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git tag\n\ngit tag -l 'v1.8.5*' (使用特定的模式查找标签)\n\n")])])]),e("h3",{attrs:{id:"_2-创建标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建标签"}},[t._v("#")]),t._v(" 2.创建标签")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('git tag -a v1.4 -m "my version 1.4" (附注标签)\n\ngit tag v1.4 (轻量标签)\n\n')])])]),e("h3",{attrs:{id:"_3-共享标签（推送标签到远程仓库）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-共享标签（推送标签到远程仓库）"}},[t._v("#")]),t._v(" 3.共享标签（推送标签到远程仓库）")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git push origin [tagname]\n\n")])])]),e("h3",{attrs:{id:"_4-后期打标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-后期打标签"}},[t._v("#")]),t._v(" 4.后期打标签")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1.git log --pretty=oneline (首先查看提交历史)\n\n2.git tag -a v1.2 9fceb02\n\n")])])]),e("h3",{attrs:{id:"_5-删除标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-删除标签"}},[t._v("#")]),t._v(" 5.删除标签")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git tag -d <tagname> (删除本地标签)\n\ngit push <remote> :refs/tags/<tagname> （更新到远程仓库）\n\n")])])]),e("h3",{attrs:{id:"_6-检出标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-检出标签"}},[t._v("#")]),t._v(" 6.检出标签")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git checkout 2.0.0\n\n")])])]),e("h3",{attrs:{id:"_7-批量操作标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-批量操作标签"}},[t._v("#")]),t._v(" 7.批量操作标签")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git tag -l | xargs git tag -d #删除所有本地分支\n\ngit fetch origin --prune #从远程拉取所有信息\n\ngit tag -l | awk '/v0.[0-4].[0-9]/{print}' | xargs git push origin --delete tag #批量删除Tag\n")])])]),e("blockquote",[e("p",[t._v("注意： 如果你做了某些更改然后提交它们，标签不会发生变化，因此，如果你需要进行更改——比如说你正在修复旧版本的错误——这通常需要创建一个新分支：")])]),t._v(" "),e("h2",{attrs:{id:"分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[t._v("#")]),t._v(" 分支")]),t._v(" "),e("h3",{attrs:{id:"_1-分支创建与分支切换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-分支创建与分支切换"}},[t._v("#")]),t._v(" 1.分支创建与分支切换")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git branch testing\ngit checkout testing\n\ngit checkout -b testing (创建新分支且切换到该分支)\n")])])]),e("h3",{attrs:{id:"_2-分支的合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-分支的合并"}},[t._v("#")]),t._v(" 2.分支的合并")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git checkout master (切换到需要合并的分支)\n\ngit merge testing (合并testing分支)\n")])])]),e("ul",[e("li",[t._v("遇到冲突时的分支合并")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Auto-merging index.html\nCONFLICT (content): Merge conflict in index.html\nAutomatic merge failed; fix conflicts and then commit the result.\n\n解决冲突：\n1.手动更改冲突文件\n2.使用图形化工具来解决冲突，运行 git mergetool\n")])])]),e("h3",{attrs:{id:"_3-删除分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-删除分支"}},[t._v("#")]),t._v(" 3.删除分支")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git branch -d testing \ngit push origin --delete testing （删除远程分支）\n\n")])])]),e("h3",{attrs:{id:"_4-远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-远程分支"}},[t._v("#")]),t._v(" 4.远程分支")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git push origin serverfix （推送远程分支）\n\ngit checkout -b serverfix origin/serverfix （本地拉取远程分支）\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);